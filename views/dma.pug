extends layout
block content
  .jumbotron
    h1.text-warning Building a Device Message Adapter
    p This section will show you how to build a Device Message Adapter (DMA) in Node-Red on a Raspberry-Pi. 
      | The DMA is the interface between the MQTT broker and the device you want to control.
    h2 
      a(NAME='contents') Table of Contents
    p
      ul
        li
          a(href='#startnodered').text-warning Starting Node-Red on a Raspberry-Pi
  h2 
    a(NAME='startnodered') Starting Node-Red on a Raspberry-Pi 
    span(style='font-size: small;')
      a(href='#contents') Table of contents
  p The Raspberry-Pi distribution comes with Node-RED already installed. 
    | However, we would like to be able to customize Node-RED for every application. 
    | Thus we will run Node-RED locally out of a application directory. 
    | Then using the Node-Package-Manager (
    b
      a(href='https://www.npmjs.com/', target='_blank') npm
    | ) we can customize our application. In addition, Node-RED has a settings.js file 
    | in which security settings are set that we would also like to customize. 
    | At Blinky-Lite, we have come up with a 
    a(href='/img/tutorial/empty-node-red.zip') blank template 
    | to get us started.
    br
    | Log into the Raspberry-Pi that is connected to the Arduino Uno. 
    | From the home directory of the Raspberry-Pi (/home/pi) type:
    br
    code wget http://www.blinky-lite.org/img/tutorial/empty-node-red.zip
    br
    | Unzip the file:
    br
    code unzip empty-node-red.zip
    br
    | To cleanup, Remove the zip file: 
    br
    code rm empty-node-red.zip
    br
    | Look for the downloaded directory by typing: 
    br
    code ls
    br
    | You should see a directory called empty-node-red. Letâ€™s rename this to something more specific like 
    b 
      i blinky-lite-tutorial-dma 
    br
    code mv  empty-node-red blinky-lite-tutorial-dma
    br
    | Enter the directory: 
    br
    code cd blinky-lite-tutorial-dma
    br
    | And install the node-red program by typing: 
    br
    code npm install
    br
    | The required node-modules will be installed. This might take awhile if you are using  a Raspberry-Pi Zero. 
    | After the application has been installed, run it by typing: 
    br
    code source runNodeRed.sh
    br
    | The program will begin to run and you should see the following output in the terminal: 
    br
    img(src='/img/tutorial/noderedstartterm.png', width='100%') 
    br
    | You can kill the program any time by typing 
    b 
      i Ctrl-c. 
    | However, leave the program running and on another computer on your local wireless network 
    | (i.e. your desktop computer), open a browser (Chrome or Firefox recommended - 
    b never IE !
    | ) type the following address: 
    br
    code http://
      b
        i host-name
      | .local:1880/
    br
    | Where 
    b
      i hostname 
    | is the host name of the Raspberry-Pi that you chose in the 
    a(href='/tutorial/setupRPi#connecting', target='_blank') Setting Up a Raspberry-Pi for Blinky-Lite 
    | tutorial. In my case, the hostname was 
    b 
      i blinky-lite-12
    | . You will see a log-in to Node-RED:
    br
    img(src='/img/tutorial/noderedsplash.png', width='100%') 
    br
    | The username and password are setup in the settings.js file of the application directory. 
    | We will discuss how to change them later. But the template that we provided has the username set to 
    b
      i admin 
    | and the password set to 
    b 
      i password
    |. Enter these values. You will see the following screen:  
    br
    img(src='/img/tutorial/noderedemptyflow.png', width='100%') 
    br
    | Select the Hello Node and delete it and then press the Deploy button. 
    | Copy the following flow 
    br
    .row
      .col-md-9
        inp#redflow.scrolling-wrapper [{"id":"262b6cae.fe0b94","type":"mqtt out","z":"465cfd27.107674","name":"","topic":"","qos":"0","retain":"true","broker":"ddd272b6.33c42","x":1170,"y":200,"wires":[]},{"id":"87b969ce.fb53b8","type":"function","z":"465cfd27.107674","name":"Adapt to MQTT","func":"return {'topic':'blinky-lite-tutorial/dma/red/' + msg.topic,'payload':msg.payload};","outputs":1,"noerr":0,"x":1000,"y":200,"wires":[["262b6cae.fe0b94"]]},{"id":"6243729.bae208c","type":"mqtt in","z":"465cfd27.107674","name":"","topic":"blinky-lite-tutorial/web-app/red/#","qos":"0","broker":"ddd272b6.33c42","x":170,"y":240,"wires":[["25ee484a.aa07a8"]]},{"id":"25ee484a.aa07a8","type":"json","z":"465cfd27.107674","name":"","property":"payload","action":"","pretty":false,"x":370,"y":240,"wires":[["174ff73a.4e0499"]]},{"id":"174ff73a.4e0499","type":"function","z":"465cfd27.107674","name":"Parse MQTT","func":"msg.topic = msg.topic.substring(msg.topic.lastIndexOf('/') + 1);\nflow.set(msg.topic,msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":510,"y":240,"wires":[["ae0ea12a.6f83d"]]},{"id":"b107d91b.d14b08","type":"function","z":"465cfd27.107674","name":"Button Debouncer","func":"if (msg.payload == 0) return null;\nvar thisPress = new Date().getTime();\nvar lastPress = context.get('lastPress');\nif (lastPress == undefined) lastPress = 0;\nif ((thisPress - lastPress) < 500 ) return null;\nvar ledState  = flow.get('ledState');\nledState = ledState + 1;\nif (ledState > 2) ledState = 0;\ncontext.set('lastPress',thisPress);\nmsg.topic = 'ledState';\nmsg.payload = ledState;\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":120,"wires":[["ae0ea12a.6f83d"]]},{"id":"f2184265.5872d","type":"arduino in","z":"465cfd27.107674","name":"Button","pin":"8","state":"INPUT","arduino":"a617aefc.4918d","x":90,"y":120,"wires":[["b107d91b.d14b08"]]},{"id":"d83d4f80.21f96","type":"inject","z":"465cfd27.107674","name":"","topic":"ledState","payload":"2","payloadType":"num","repeat":"","crontab":"","once":true,"onceDelay":"5","x":510,"y":80,"wires":[["ae0ea12a.6f83d"]]},{"id":"b8d60c77.daaf1","type":"arduino in","z":"465cfd27.107674","name":"Pot","pin":"0","state":"ANALOG","arduino":"a617aefc.4918d","x":90,"y":180,"wires":[["2273880a.9427a8"]]},{"id":"2273880a.9427a8","type":"function","z":"465cfd27.107674","name":"Pot Blocker","func":"var lastReading = context.get('lastReading');\nif (lastReading == undefined) lastReading = -1;\nvar deltaReading = Math.abs(msg.payload - lastReading);\nif (deltaReading < 10 ) return null;\ncontext.set('lastReading', msg.payload);\nmsg.payload = Math.round(100.0 * (5.0 / 3.3) * msg.payload / 1024.0);\nmsg.topic = 'ledIntensity';\nreturn msg;","outputs":1,"noerr":0,"x":510,"y":180,"wires":[["ae0ea12a.6f83d"]]},{"id":"d0d6c694.6f0bc8","type":"inject","z":"465cfd27.107674","name":"Blinker","topic":"blinker","payload":"","payloadType":"date","repeat":"0.001","crontab":"","once":true,"onceDelay":0.1,"x":520,"y":280,"wires":[["ae0ea12a.6f83d"]]},{"id":"ae0ea12a.6f83d","type":"function","z":"465cfd27.107674","name":"LED Controller","func":"if (msg.topic != 'blinker') flow.set(msg.topic, msg.payload);\nvar ledValue = context.get('ledValue');\nif (ledValue == undefined) ledValue = -1;\nvar ledIntensity = flow.get('ledIntensity');\nif (ledIntensity == undefined) ledIntensity = 0;\nvar ledState = flow.get('ledState');\nif (ledState == undefined) ledState = 0;\nvar ledToggle = flow.get('ledToggle');\nif (ledToggle == undefined) ledToggle = 1;\nif (msg.topic != 'blinker')\n{\n    if (ledState == 0)\n    {\n        ledValue = 0;\n    }\n    if (ledState == 2) \n    {\n        ledValue = Math.round(ledIntensity * 255.0 / 100.0);\n    }\n}\nelse\n{\n    ledValue = -1;\n    var counter = context.get('counter');\n    if (counter == undefined) counter = 0;\n    if (ledState == 1)\n    {\n        if (counter == 0)\n        {\n            ledValue = Math.round(ledIntensity * 255.0 / 100.0);\n        }\n        if (counter == ledToggle)\n        {\n            ledValue = 0;\n        }\n    }\n    counter  = counter + 1;\n    if (counter > (ledToggle * 2)) counter = 0;\n    context.set('counter',counter);\n    \n    msg = null;\n}\nvar ledMsg = {'topic':'ledValue', 'payload':ledValue};\nif (ledValue < 0) ledMsg =  null;\nreturn [ledMsg, msg];","outputs":2,"noerr":0,"x":780,"y":180,"wires":[["d9704691.6989e8"],["87b969ce.fb53b8"]]},{"id":"d9704691.6989e8","type":"arduino out","z":"465cfd27.107674","name":"Led","pin":"10","state":"PWM","arduino":"a617aefc.4918d","x":970,"y":140,"wires":[]},{"id":"811444e.8abb8b8","type":"inject","z":"465cfd27.107674","name":"","topic":"ledToggle","payload":"100","payloadType":"num","repeat":"","crontab":"","once":true,"onceDelay":"5","x":500,"y":40,"wires":[["ae0ea12a.6f83d"]]},{"id":"ddd272b6.33c42","type":"mqtt-broker","z":"","name":"MQTT-dma","broker":"broker.shiftr.io","port":"1883","clientid":"blinky-lite-tutorial-dma","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"a617aefc.4918d","type":"arduino-board","z":"","device":"/dev/ttyACM0"}]
      .col-md-3
        button.btn.card-button(onclick='copyFlow()') Copy

    br
    |  
    br
    code 
    br
    |  
    br
    code 
    br
    |  
    br
    code 
    br
    |  
    br
    code 
    br
    |  
    br
    code 
    br
    |  
  script.
    function copyFlow() {
    var copyText = document.getElementById("redflow");
    document.execCommand("copy");  
    alert("Flow copied to clipboard");
    }
    
      
      
